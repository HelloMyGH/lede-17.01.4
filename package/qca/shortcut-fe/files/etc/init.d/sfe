#!/bin/sh /etc/rc.common
#
#SFE connection manager has a lower priority, it should be started after other connection manager
#to detect the existence of connection manager with higher priority

START=72

have_cm() {
	[ -d "/sys/kernel/debug/ecm" ] && echo 1 || echo 0
}

#load shortcut-fe connection manager
load_sfe_cm() {
	local kernel_version=$(uname -r)

	#shortcut-fe-drv.ko is not needed because other connection manager is not enabled
	[ -d "/sys/module/shortcut_fe_drv" ] && rmmod shortcut_fe_drv

	[ -e "/lib/modules/$kernel_version/shortcut-fe-cm.ko" ] && {
		[ -d /sys/module/shortcut_fe_cm ] || insmod /lib/modules/$kernel_version/shortcut-fe-cm.ko
	}
	[ -e "/lib/modules/$kernel_version/fast-classifier.ko" ] && {
		[ -d /sys/module/fast_classifier ] || insmod /lib/modules/$kernel_version/fast-classifier.ko
	}
}

start() {
	local enabled=$(uci get sfe.config.enabled 2>/dev/null)
	[ $enabled -eq 1 ] && {		
		[ "$(have_cm)" = "1" ] || load_sfe_cm
		local wifi=$(uci get sfe.config.wifi 2>/dev/null)
		echo "$wifi" > /sys/fast_classifier/skip_to_bridge_ingress
		local ipv6=$(uci get sfe.config.ipv6 2>/dev/null)
		[ $ipv6 -eq 1 ] && {
			sfe_ipv6=$(cat /sys/sfe_ipv6/debug_dev)
			[ ! -f /dev/sfe_ipv6 ] && mknod /dev/sfe_ipv6 c $sfe_ipv6 0
		} || {
			rm -f /dev/sfe_ipv6
		}
	}
}

stop() {
	[ -d /sys/module/shortcut_fe_cm ] && rmmod shortcut_fe_cm
	[ -d /sys/module/fast_classifier ] && rmmod fast_classifier
}

restart() {
	stop
	start
}
